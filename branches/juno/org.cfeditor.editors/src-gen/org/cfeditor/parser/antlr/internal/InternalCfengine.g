/*
* generated by Xtext
*/
grammar InternalCfengine;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.cfeditor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.cfeditor.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.cfeditor.services.CfengineGrammarAccess;

}

@parser::members {

 	private CfengineGrammarAccess grammarAccess;
 	
    public InternalCfengineParser(TokenStream input, CfengineGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "CfModel";	
   	}
   	
   	@Override
   	protected CfengineGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCfModel
entryRuleCfModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCfModelRule()); }
	 iv_ruleCfModel=ruleCfModel 
	 { $current=$iv_ruleCfModel.current; } 
	 EOF 
;

// Rule CfModel
ruleCfModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getCfModelAccess().getElementsAbstractElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleAbstractElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCfModelRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"AbstractElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleCLASS_ID
entryRuleCLASS_ID returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCLASS_IDRule()); } 
	 iv_ruleCLASS_ID=ruleCLASS_ID 
	 { $current=$iv_ruleCLASS_ID.current.getText(); }  
	 EOF 
;

// Rule CLASS_ID
ruleCLASS_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getCLASS_IDAccess().getIDTerminalRuleCall_0_0()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCLASS_IDAccess().getFullStopKeyword_0_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCLASS_IDAccess().getCLASS_IDParserRuleCall_0_1_1()); 
    }
    this_CLASS_ID_2=ruleCLASS_ID    {
		$current.merge(this_CLASS_ID_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    |(
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCLASS_IDAccess().getExclamationMarkKeyword_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCLASS_IDAccess().getCLASS_IDParserRuleCall_1_1()); 
    }
    this_CLASS_ID_4=ruleCLASS_ID    {
		$current.merge(this_CLASS_ID_4);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    |(
	kw='(' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCLASS_IDAccess().getLeftParenthesisKeyword_2_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCLASS_IDAccess().getCLASS_IDParserRuleCall_2_1()); 
    }
    this_CLASS_ID_6=ruleCLASS_ID    {
		$current.merge(this_CLASS_ID_6);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw=')' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCLASS_IDAccess().getRightParenthesisKeyword_2_2()); 
    }
(
	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCLASS_IDAccess().getFullStopKeyword_2_3_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getCLASS_IDAccess().getCLASS_IDParserRuleCall_2_3_1()); 
    }
    this_CLASS_ID_9=ruleCLASS_ID    {
		$current.merge(this_CLASS_ID_9);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?))
    ;





// Entry rule entryRuleAbstractElement
entryRuleAbstractElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractElementRule()); }
	 iv_ruleAbstractElement=ruleAbstractElement 
	 { $current=$iv_ruleAbstractElement.current; } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getBundleParserRuleCall_0()); 
    }
    this_Bundle_0=ruleBundle
    { 
        $current = $this_Bundle_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractElementAccess().getBodyParserRuleCall_1()); 
    }
    this_Body_1=ruleBody
    { 
        $current = $this_Body_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBundle
entryRuleBundle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundleRule()); }
	 iv_ruleBundle=ruleBundle 
	 { $current=$iv_ruleBundle.current; } 
	 EOF 
;

// Rule Bundle
ruleBundle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='bundle' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBundleAccess().getBundleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundleAccess().getComponentBundleComponentParserRuleCall_1_0()); 
	    }
		lv_component_1_0=ruleBundleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundleRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_1_0, 
        		"BundleComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getBundleAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBundleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBundleAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		lv_variables_4_0=RULE_ID
		{
			newLeafNode(lv_variables_4_0, grammarAccess.getBundleAccess().getVariablesIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBundleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"variables",
        		lv_variables_4_0, 
        		"ID");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBundleAccess().getCommaKeyword_3_2_0());
    }
(
(
		lv_variables_6_0=RULE_ID
		{
			newLeafNode(lv_variables_6_0, grammarAccess.getBundleAccess().getVariablesIDTerminalRuleCall_3_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBundleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"variables",
        		lv_variables_6_0, 
        		"ID");
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBundleAccess().getRightParenthesisKeyword_3_3());
    }
)?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBundleAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundleAccess().getPromiseTypeBundlePromiseTypeParserRuleCall_5_0()); 
	    }
		lv_promiseType_9_0=ruleBundlePromiseType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundleRule());
	        }
       		add(
       			$current, 
       			"promiseType",
        		lv_promiseType_9_0, 
        		"BundlePromiseType");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBundleAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleBundleComponent
entryRuleBundleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundleComponentRule()); }
	 iv_ruleBundleComponent=ruleBundleComponent 
	 { $current=$iv_ruleBundleComponent.current; } 
	 EOF 
;

// Rule BundleComponent
ruleBundleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getBundleComponentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBundleComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleBundlePromiseType
entryRuleBundlePromiseType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundlePromiseTypeRule()); }
	 iv_ruleBundlePromiseType=ruleBundlePromiseType 
	 { $current=$iv_ruleBundlePromiseType.current; } 
	 EOF 
;

// Rule BundlePromiseType
ruleBundlePromiseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getBundlePromiseTypeAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBundlePromiseTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBundlePromiseTypeAccess().getColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundlePromiseTypeAccess().getPromisesBundlePromiseParserRuleCall_2_0()); 
	    }
		lv_promises_2_0=ruleBundlePromise		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundlePromiseTypeRule());
	        }
       		add(
       			$current, 
       			"promises",
        		lv_promises_2_0, 
        		"BundlePromise");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getBundlePromiseTypeAccess().getClassesBundleClassParserRuleCall_3_0()); 
	    }
		lv_classes_3_0=ruleBundleClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundlePromiseTypeRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_3_0, 
        		"BundleClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleBundleClass
entryRuleBundleClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundleClassRule()); }
	 iv_ruleBundleClass=ruleBundleClass 
	 { $current=$iv_ruleBundleClass.current; } 
	 EOF 
;

// Rule BundleClass
ruleBundleClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBundleClassAccess().getNameCLASS_IDParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleCLASS_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundleClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"CLASS_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBundleClassAccess().getColonColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundleClassAccess().getPromisesBundlePromiseParserRuleCall_2_0()); 
	    }
		lv_promises_2_0=ruleBundlePromise		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundleClassRule());
	        }
       		add(
       			$current, 
       			"promises",
        		lv_promises_2_0, 
        		"BundlePromise");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleBundlePromise
entryRuleBundlePromise returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBundlePromiseRule()); }
	 iv_ruleBundlePromise=ruleBundlePromise 
	 { $current=$iv_ruleBundlePromise.current; } 
	 EOF 
;

// Rule BundlePromise
ruleBundlePromise returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_STRING
		{
			newLeafNode(lv_name_0_0, grammarAccess.getBundlePromiseAccess().getNameSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBundlePromiseRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"STRING");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getBundlePromiseAccess().getValuesPromiseValueParserRuleCall_1_0_0()); 
	    }
		lv_values_1_0=rulePromiseValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundlePromiseRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_1_0, 
        		"PromiseValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBundlePromiseAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBundlePromiseAccess().getValuesPromiseValueParserRuleCall_1_1_1_0()); 
	    }
		lv_values_3_0=rulePromiseValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBundlePromiseRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_3_0, 
        		"PromiseValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBundlePromiseAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRulePromiseValue
entryRulePromiseValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPromiseValueRule()); }
	 iv_rulePromiseValue=rulePromiseValue 
	 { $current=$iv_rulePromiseValue.current; } 
	 EOF 
;

// Rule PromiseValue
rulePromiseValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_keyword_0_0=RULE_ID
		{
			newLeafNode(lv_keyword_0_0, grammarAccess.getPromiseValueAccess().getKeywordIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPromiseValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"keyword",
        		lv_keyword_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPromiseValueAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(((
(
		lv_values_2_0=RULE_STRING
		{
			newLeafNode(lv_values_2_0, grammarAccess.getPromiseValueAccess().getValuesSTRINGTerminalRuleCall_2_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPromiseValueRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPromiseValueAccess().getFunctionsSimpleFunctionParserRuleCall_2_0_1_0()); 
	    }
		lv_functions_3_0=ruleSimpleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPromiseValueRule());
	        }
       		add(
       			$current, 
       			"functions",
        		lv_functions_3_0, 
        		"SimpleFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_values_4_0=RULE_ID
		{
			newLeafNode(lv_values_4_0, grammarAccess.getPromiseValueAccess().getValuesIDTerminalRuleCall_2_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPromiseValueRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"ID");
	    }

)
))
    |(	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPromiseValueAccess().getLeftCurlyBracketKeyword_2_1_0());
    }
((
(
		lv_values_6_0=RULE_STRING
		{
			newLeafNode(lv_values_6_0, grammarAccess.getPromiseValueAccess().getValuesSTRINGTerminalRuleCall_2_1_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPromiseValueRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_6_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPromiseValueAccess().getFunctionsSimpleFunctionParserRuleCall_2_1_1_1_0()); 
	    }
		lv_functions_7_0=ruleSimpleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPromiseValueRule());
	        }
       		add(
       			$current, 
       			"functions",
        		lv_functions_7_0, 
        		"SimpleFunction");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPromiseValueAccess().getCommaKeyword_2_1_2_0());
    }
((
(
		lv_values_9_0=RULE_STRING
		{
			newLeafNode(lv_values_9_0, grammarAccess.getPromiseValueAccess().getValuesSTRINGTerminalRuleCall_2_1_2_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPromiseValueRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_9_0, 
        		"STRING");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getPromiseValueAccess().getFunctionsSimpleFunctionParserRuleCall_2_1_2_1_1_0()); 
	    }
		lv_functions_10_0=ruleSimpleFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPromiseValueRule());
	        }
       		add(
       			$current, 
       			"functions",
        		lv_functions_10_0, 
        		"SimpleFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPromiseValueAccess().getRightCurlyBracketKeyword_2_1_3());
    }
)
    |(	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPromiseValueAccess().getLeftCurlyBracketKeyword_2_2_0());
    }
	otherlv_13='@' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPromiseValueAccess().getCommercialAtKeyword_2_2_1());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getPromiseValueAccess().getLeftParenthesisKeyword_2_2_2());
    }
this_ID_15=RULE_ID
    { 
    newLeafNode(this_ID_15, grammarAccess.getPromiseValueAccess().getIDTerminalRuleCall_2_2_3()); 
    }
	otherlv_16=')' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPromiseValueAccess().getRightParenthesisKeyword_2_2_4());
    }
	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getPromiseValueAccess().getRightCurlyBracketKeyword_2_2_5());
    }
)))
;





// Entry rule entryRuleSimpleFunction
entryRuleSimpleFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleFunctionRule()); }
	 iv_ruleSimpleFunction=ruleSimpleFunction 
	 { $current=$iv_ruleSimpleFunction.current; } 
	 EOF 
;

// Rule SimpleFunction
ruleSimpleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_id_0_0=RULE_ID
		{
			newLeafNode(lv_id_0_0, grammarAccess.getSimpleFunctionAccess().getIdIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleFunctionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_values_2_0=RULE_STRING
		{
			newLeafNode(lv_values_2_0, grammarAccess.getSimpleFunctionAccess().getValuesSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFunctionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleFunctionAccess().getCommaKeyword_3_0());
    }
(
(
		lv_values_4_0=RULE_STRING
		{
			newLeafNode(lv_values_4_0, grammarAccess.getSimpleFunctionAccess().getValuesSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFunctionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"STRING");
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleFunctionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleBody
entryRuleBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyRule()); }
	 iv_ruleBody=ruleBody 
	 { $current=$iv_ruleBody.current; } 
	 EOF 
;

// Rule Body
ruleBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='body' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBodyAccess().getBodyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyAccess().getComponentBodyComponentParserRuleCall_1_0()); 
	    }
		lv_component_1_0=ruleBodyComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRule());
	        }
       		set(
       			$current, 
       			"component",
        		lv_component_1_0, 
        		"BodyComponent");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getBodyAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBodyAccess().getLeftParenthesisKeyword_3_0());
    }
(
(
		lv_variables_4_0=RULE_ID
		{
			newLeafNode(lv_variables_4_0, grammarAccess.getBodyAccess().getVariablesIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"variables",
        		lv_variables_4_0, 
        		"ID");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBodyAccess().getCommaKeyword_3_2_0());
    }
(
(
		lv_variables_6_0=RULE_ID
		{
			newLeafNode(lv_variables_6_0, grammarAccess.getBodyAccess().getVariablesIDTerminalRuleCall_3_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"variables",
        		lv_variables_6_0, 
        		"ID");
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBodyAccess().getRightParenthesisKeyword_3_3());
    }
)?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyAccess().getPromiseTypeBodyFunctionParserRuleCall_5_0()); 
	    }
		lv_promiseType_9_0=ruleBodyFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRule());
	        }
       		add(
       			$current, 
       			"promiseType",
        		lv_promiseType_9_0, 
        		"BodyFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyAccess().getClassesBodyClassParserRuleCall_6_0()); 
	    }
		lv_classes_10_0=ruleBodyClass		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyRule());
	        }
       		add(
       			$current, 
       			"classes",
        		lv_classes_10_0, 
        		"BodyClass");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleBodyPromiseType
entryRuleBodyPromiseType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyPromiseTypeRule()); }
	 iv_ruleBodyPromiseType=ruleBodyPromiseType 
	 { $current=$iv_ruleBodyPromiseType.current; } 
	 EOF 
;

// Rule BodyPromiseType
ruleBodyPromiseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getBodyPromiseTypeAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyPromiseTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleBodyComponent
entryRuleBodyComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyComponentRule()); }
	 iv_ruleBodyComponent=ruleBodyComponent 
	 { $current=$iv_ruleBodyComponent.current; } 
	 EOF 
;

// Rule BodyComponent
ruleBodyComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getBodyComponentAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleBodyClass
entryRuleBodyClass returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyClassRule()); }
	 iv_ruleBodyClass=ruleBodyClass 
	 { $current=$iv_ruleBodyClass.current; } 
	 EOF 
;

// Rule BodyClass
ruleBodyClass returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBodyClassAccess().getNameCLASS_IDParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleCLASS_ID		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyClassRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"CLASS_ID");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBodyClassAccess().getColonColonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyClassAccess().getPromiseTypeBodyFunctionParserRuleCall_2_0()); 
	    }
		lv_promiseType_2_0=ruleBodyFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyClassRule());
	        }
       		add(
       			$current, 
       			"promiseType",
        		lv_promiseType_2_0, 
        		"BodyFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleBodyFunction
entryRuleBodyFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBodyFunctionRule()); }
	 iv_ruleBodyFunction=ruleBodyFunction 
	 { $current=$iv_ruleBodyFunction.current; } 
	 EOF 
;

// Rule BodyFunction
ruleBodyFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBodyFunctionAccess().getNameBodyPromiseTypeParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleBodyPromiseType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyFunctionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"BodyPromiseType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBodyFunctionAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
((
(
		lv_values_2_0=RULE_STRING
		{
			newLeafNode(lv_values_2_0, grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyFunctionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_2_0, 
        		"STRING");
	    }

)
)
    |((
(
		lv_List_3_0=	'{' 
    {
        newLeafNode(lv_List_3_0, grammarAccess.getBodyFunctionAccess().getListLeftCurlyBracketKeyword_2_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyFunctionRule());
	        }
       		setWithLastConsumed($current, "List", true, "{");
	    }

)
)(
(
		lv_values_4_0=RULE_STRING
		{
			newLeafNode(lv_values_4_0, grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyFunctionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_4_0, 
        		"STRING");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getBodyFunctionAccess().getCommaKeyword_2_1_2_0());
    }
(
(
		lv_values_6_0=RULE_STRING
		{
			newLeafNode(lv_values_6_0, grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBodyFunctionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"values",
        		lv_values_6_0, 
        		"STRING");
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBodyFunctionAccess().getRightCurlyBracketKeyword_2_1_3());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBodyFunctionAccess().getFunctionSpecialFunctionParserRuleCall_2_2_0()); 
	    }
		lv_function_8_0=ruleSpecialFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBodyFunctionRule());
	        }
       		add(
       			$current, 
       			"function",
        		lv_function_8_0, 
        		"SpecialFunction");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getBodyFunctionAccess().getLeftCurlyBracketKeyword_2_3_0());
    }
	otherlv_10='@' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBodyFunctionAccess().getCommercialAtKeyword_2_3_1());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBodyFunctionAccess().getLeftParenthesisKeyword_2_3_2());
    }
this_ID_12=RULE_ID
    { 
    newLeafNode(this_ID_12, grammarAccess.getBodyFunctionAccess().getIDTerminalRuleCall_2_3_3()); 
    }
	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getBodyFunctionAccess().getRightParenthesisKeyword_2_3_4());
    }
	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getBodyFunctionAccess().getRightCurlyBracketKeyword_2_3_5());
    }
))	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getBodyFunctionAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleSpecialFunction
entryRuleSpecialFunction returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialFunctionRule()); }
	 iv_ruleSpecialFunction=ruleSpecialFunction 
	 { $current=$iv_ruleSpecialFunction.current; } 
	 EOF 
;

// Rule SpecialFunction
ruleSpecialFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_id_0_0=RULE_ID
		{
			newLeafNode(lv_id_0_0, grammarAccess.getSpecialFunctionAccess().getIdIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecialFunctionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"ID");
	    }

)
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSpecialFunctionAccess().getLeftParenthesisKeyword_1());
    }
(this_ANY_OTHER_2=RULE_ANY_OTHER
    { 
    newLeafNode(this_ANY_OTHER_2, grammarAccess.getSpecialFunctionAccess().getANY_OTHERTerminalRuleCall_2_0()); 
    }

    |this_ID_3=RULE_ID
    { 
    newLeafNode(this_ID_3, grammarAccess.getSpecialFunctionAccess().getIDTerminalRuleCall_2_1()); 
    }

    |this_STRING_4=RULE_STRING
    { 
    newLeafNode(this_STRING_4, grammarAccess.getSpecialFunctionAccess().getSTRINGTerminalRuleCall_2_2()); 
    }

    |	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSpecialFunctionAccess().getCommaKeyword_2_3());
    }

    |(	otherlv_6='$(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSpecialFunctionAccess().getDollarSignLeftParenthesisKeyword_2_4_0());
    }
this_ID_7=RULE_ID
    { 
    newLeafNode(this_ID_7, grammarAccess.getSpecialFunctionAccess().getIDTerminalRuleCall_2_4_1()); 
    }
	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSpecialFunctionAccess().getRightParenthesisKeyword_2_4_2());
    }
)
    |(	otherlv_9='${' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSpecialFunctionAccess().getDollarSignLeftCurlyBracketKeyword_2_5_0());
    }
this_ID_10=RULE_ID
    { 
    newLeafNode(this_ID_10, grammarAccess.getSpecialFunctionAccess().getIDTerminalRuleCall_2_5_1()); 
    }
	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSpecialFunctionAccess().getRightCurlyBracketKeyword_2_5_2());
    }
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecialFunctionAccess().getFuncSpecialFunctionParserRuleCall_2_6_0()); 
	    }
		lv_func_12_0=ruleSpecialFunction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecialFunctionRule());
	        }
       		add(
       			$current, 
       			"func",
        		lv_func_12_0, 
        		"SpecialFunction");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_13=')' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSpecialFunctionAccess().getRightParenthesisKeyword_3());
    }
)
;





RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' (~(('\\'|'"'))|'\\' .)* '"'|'\'' (~(('\\'|'\''))|'\\' .)* '\'');

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


