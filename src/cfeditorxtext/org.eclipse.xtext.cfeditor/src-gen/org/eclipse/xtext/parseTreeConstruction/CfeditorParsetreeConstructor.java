/*
* generated by Xtext
*/
package org.eclipse.xtext.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.eclipse.xtext.services.CfeditorGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class CfeditorParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private CfeditorGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new CfModel_ElementsAssignment(this, this, 0, inst);
			case 1: return new AbstractElement_PartParserRuleCall(this, this, 1, inst);
			case 2: return new Part_Alternatives(this, this, 2, inst);
			case 3: return new Bundle_Group(this, this, 3, inst);
			case 4: return new Body_Group(this, this, 4, inst);
			case 5: return new BodyFunction_Group(this, this, 5, inst);
			case 6: return new SpecialFunction_Group(this, this, 6, inst);
			case 7: return new BundlePromiseType_NameAssignment(this, this, 7, inst);
			case 8: return new BodyPromiseType_NameAssignment(this, this, 8, inst);
			case 9: return new BundleComponent_NameAssignment(this, this, 9, inst);
			case 10: return new BodyComponent_NameAssignment(this, this, 10, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule CfModel ****************
 *
 * CfModel:
 * 	elements+=AbstractElement*;
 *
 **/

// elements+=AbstractElement*
protected class CfModel_ElementsAssignment extends AssignmentToken  {
	
	public CfModel_ElementsAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getCfModelAccess().getElementsAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AbstractElement_PartParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("elements",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("elements");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAbstractElementRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getCfModelAccess().getElementsAbstractElementParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new CfModel_ElementsAssignment(lastRuleCallOrigin, next, actIndex, consumed);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index - 1, consumed);
		}	
	}	
}

/************ end Rule CfModel ****************/



/************ begin Rule AbstractElement ****************
 *
 * AbstractElement:
 * 	Part;
 *
 **/

// Part
protected class AbstractElement_PartParserRuleCall extends RuleCallToken {
	
	public AbstractElement_PartParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getAbstractElementAccess().getPartParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Part_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBundleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Part_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule AbstractElement ****************/


/************ begin Rule Part ****************
 *
 * Part:
 * 	Bundle | Body;
 *
 **/

// Bundle | Body
protected class Part_Alternatives extends AlternativesToken {

	public Part_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getPartAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Part_BundleParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Part_BodyParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getBundleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// Bundle
protected class Part_BundleParserRuleCall_0 extends RuleCallToken {
	
	public Part_BundleParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPartAccess().getBundleParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBundleRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Bundle_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// Body
protected class Part_BodyParserRuleCall_1 extends RuleCallToken {
	
	public Part_BodyParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getPartAccess().getBodyParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Body_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyRule().getType().getClassifier())
			return null;
		if(checkForRecursion(Body_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule Part ****************/


/************ begin Rule Bundle ****************
 *
 * Bundle:
 * 	"bundle" component=BundleComponent name=ID "{" (promiseType+=BundlePromiseType ":" PLACEHOLDER*)*
 * 	/ *(methods+=Methode)* * / "}";
 *
 **/

// "bundle" component=BundleComponent name=ID "{" (promiseType+=BundlePromiseType ":" PLACEHOLDER*)*
// / *(methods+=Methode)* * / "}"
protected class Bundle_Group extends GroupToken {
	
	public Bundle_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBundleAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBundleRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "bundle"
protected class Bundle_BundleKeyword_0 extends KeywordToken  {
	
	public Bundle_BundleKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBundleAccess().getBundleKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// component=BundleComponent
protected class Bundle_ComponentAssignment_1 extends AssignmentToken  {
	
	public Bundle_ComponentAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBundleAccess().getComponentAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BundleComponent_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("component",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("component");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBundleComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBundleAccess().getComponentBundleComponentParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Bundle_BundleKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// name=ID
protected class Bundle_NameAssignment_2 extends AssignmentToken  {
	
	public Bundle_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBundleAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_ComponentAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBundleAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBundleAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Bundle_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public Bundle_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBundleAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// (promiseType+=BundlePromiseType ":" PLACEHOLDER*)*
protected class Bundle_Group_4 extends GroupToken {
	
	public Bundle_Group_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBundleAccess().getGroup_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_ColonKeyword_4_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// promiseType+=BundlePromiseType
protected class Bundle_PromiseTypeAssignment_4_0 extends AssignmentToken  {
	
	public Bundle_PromiseTypeAssignment_4_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBundleAccess().getPromiseTypeAssignment_4_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BundlePromiseType_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("promiseType",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("promiseType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBundlePromiseTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBundleAccess().getPromiseTypeBundlePromiseTypeParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Bundle_Group_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Bundle_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ":"
protected class Bundle_ColonKeyword_4_1 extends KeywordToken  {
	
	public Bundle_ColonKeyword_4_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBundleAccess().getColonKeyword_4_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_PromiseTypeAssignment_4_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "}"
protected class Bundle_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public Bundle_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBundleAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Bundle_Group_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Bundle_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Bundle ****************/


/************ begin Rule Body ****************
 *
 * //BodyPromiseType '=>' (values+=STRING | '{' values+=STRING
 * Body:
 * 	"body" component=BodyComponent name=ID PLACEHOLDER* "{" promiseType+=BodyFunction* "}";
 *
 **/

// "body" component=BodyComponent name=ID PLACEHOLDER* "{" promiseType+=BodyFunction* "}"
protected class Body_Group extends GroupToken {
	
	public Body_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBodyAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Body_RightCurlyBracketKeyword_6(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "body"
protected class Body_BodyKeyword_0 extends KeywordToken  {
	
	public Body_BodyKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyAccess().getBodyKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// component=BodyComponent
protected class Body_ComponentAssignment_1 extends AssignmentToken  {
	
	public Body_ComponentAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyAccess().getComponentAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyComponent_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("component",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("component");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBodyComponentRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBodyAccess().getComponentBodyComponentParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Body_BodyKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// name=ID
protected class Body_NameAssignment_2 extends AssignmentToken  {
	
	public Body_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Body_ComponentAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBodyAccess().getNameIDTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBodyAccess().getNameIDTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class Body_LeftCurlyBracketKeyword_4 extends KeywordToken  {
	
	public Body_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyAccess().getLeftCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Body_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// promiseType+=BodyFunction*
protected class Body_PromiseTypeAssignment_5 extends AssignmentToken  {
	
	public Body_PromiseTypeAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyAccess().getPromiseTypeAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("promiseType",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("promiseType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBodyFunctionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBodyAccess().getPromiseTypeBodyFunctionParserRuleCall_5_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new Body_PromiseTypeAssignment_5(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new Body_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class Body_RightCurlyBracketKeyword_6 extends KeywordToken  {
	
	public Body_RightCurlyBracketKeyword_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyAccess().getRightCurlyBracketKeyword_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new Body_PromiseTypeAssignment_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new Body_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule Body ****************/


/************ begin Rule BodyFunction ****************
 *
 * //	(',' values+=STRING)* '}') ';'
 * BodyFunction:
 * 	name=BodyPromiseType "=>" (values+=STRING | "{" values+=STRING ("," values+=STRING)* "}" | function+=SpecialFunction)
 * 	";";
 *
 **/

// name=BodyPromiseType "=>" (values+=STRING | "{" values+=STRING ("," values+=STRING)* "}" | function+=SpecialFunction)
// ";"
protected class BodyFunction_Group extends GroupToken {
	
	public BodyFunction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_SemicolonKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyFunctionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=BodyPromiseType
protected class BodyFunction_NameAssignment_0 extends AssignmentToken  {
	
	public BodyFunction_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyPromiseType_NameAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getBodyPromiseTypeRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBodyFunctionAccess().getNameBodyPromiseTypeParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// "=>"
protected class BodyFunction_EqualsSignGreaterThanSignKeyword_1 extends KeywordToken  {
	
	public BodyFunction_EqualsSignGreaterThanSignKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getEqualsSignGreaterThanSignKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// values+=STRING | "{" values+=STRING ("," values+=STRING)* "}" | function+=SpecialFunction
protected class BodyFunction_Alternatives_2 extends AlternativesToken {

	public BodyFunction_Alternatives_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getAlternatives_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_ValuesAssignment_2_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BodyFunction_Group_2_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new BodyFunction_FunctionAssignment_2_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

}

// values+=STRING
protected class BodyFunction_ValuesAssignment_2_0 extends AssignmentToken  {
	
	public BodyFunction_ValuesAssignment_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getValuesAssignment_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_0_0();
			return obj;
		}
		return null;
	}

}

// "{" values+=STRING ("," values+=STRING)* "}"
protected class BodyFunction_Group_2_1 extends GroupToken {
	
	public BodyFunction_Group_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getGroup_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_RightCurlyBracketKeyword_2_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class BodyFunction_LeftCurlyBracketKeyword_2_1_0 extends KeywordToken  {
	
	public BodyFunction_LeftCurlyBracketKeyword_2_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getLeftCurlyBracketKeyword_2_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// values+=STRING
protected class BodyFunction_ValuesAssignment_2_1_1 extends AssignmentToken  {
	
	public BodyFunction_ValuesAssignment_2_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getValuesAssignment_2_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_LeftCurlyBracketKeyword_2_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_1_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_1_1_0();
			return obj;
		}
		return null;
	}

}

// ("," values+=STRING)*
protected class BodyFunction_Group_2_1_2 extends GroupToken {
	
	public BodyFunction_Group_2_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getGroup_2_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_ValuesAssignment_2_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class BodyFunction_CommaKeyword_2_1_2_0 extends KeywordToken  {
	
	public BodyFunction_CommaKeyword_2_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getCommaKeyword_2_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BodyFunction_ValuesAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// values+=STRING
protected class BodyFunction_ValuesAssignment_2_1_2_1 extends AssignmentToken  {
	
	public BodyFunction_ValuesAssignment_2_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getValuesAssignment_2_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_CommaKeyword_2_1_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_1_2_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBodyFunctionAccess().getValuesSTRINGTerminalRuleCall_2_1_2_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class BodyFunction_RightCurlyBracketKeyword_2_1_3 extends KeywordToken  {
	
	public BodyFunction_RightCurlyBracketKeyword_2_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getRightCurlyBracketKeyword_2_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_Group_2_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new BodyFunction_ValuesAssignment_2_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


// function+=SpecialFunction
protected class BodyFunction_FunctionAssignment_2_2 extends AssignmentToken  {
	
	public BodyFunction_FunctionAssignment_2_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getFunctionAssignment_2_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("function",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("function");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSpecialFunctionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getBodyFunctionAccess().getFunctionSpecialFunctionParserRuleCall_2_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new BodyFunction_EqualsSignGreaterThanSignKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// ";"
protected class BodyFunction_SemicolonKeyword_3 extends KeywordToken  {
	
	public BodyFunction_SemicolonKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getBodyFunctionAccess().getSemicolonKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new BodyFunction_Alternatives_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule BodyFunction ****************/


/************ begin Rule SpecialFunction ****************
 *
 * SpecialFunction:
 * 	name=ID "(" parameters+=STRING ("," parameters+=STRING)* ")";
 *
 **/

// name=ID "(" parameters+=STRING ("," parameters+=STRING)* ")"
protected class SpecialFunction_Group extends GroupToken {
	
	public SpecialFunction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_RightParenthesisKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSpecialFunctionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// name=ID
protected class SpecialFunction_NameAssignment_0 extends AssignmentToken  {
	
	public SpecialFunction_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpecialFunctionAccess().getNameIDTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpecialFunctionAccess().getNameIDTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// "("
protected class SpecialFunction_LeftParenthesisKeyword_1 extends KeywordToken  {
	
	public SpecialFunction_LeftParenthesisKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getLeftParenthesisKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// parameters+=STRING
protected class SpecialFunction_ParametersAssignment_2 extends AssignmentToken  {
	
	public SpecialFunction_ParametersAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getParametersAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_LeftParenthesisKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpecialFunctionAccess().getParametersSTRINGTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpecialFunctionAccess().getParametersSTRINGTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// ("," parameters+=STRING)*
protected class SpecialFunction_Group_3 extends GroupToken {
	
	public SpecialFunction_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_ParametersAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class SpecialFunction_CommaKeyword_3_0 extends KeywordToken  {
	
	public SpecialFunction_CommaKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getCommaKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SpecialFunction_ParametersAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// parameters+=STRING
protected class SpecialFunction_ParametersAssignment_3_1 extends AssignmentToken  {
	
	public SpecialFunction_ParametersAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getParametersAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_CommaKeyword_3_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("parameters",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("parameters");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSpecialFunctionAccess().getParametersSTRINGTerminalRuleCall_3_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSpecialFunctionAccess().getParametersSTRINGTerminalRuleCall_3_1_0();
			return obj;
		}
		return null;
	}

}


// ")"
protected class SpecialFunction_RightParenthesisKeyword_4 extends KeywordToken  {
	
	public SpecialFunction_RightParenthesisKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSpecialFunctionAccess().getRightParenthesisKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SpecialFunction_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SpecialFunction_ParametersAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}


/************ end Rule SpecialFunction ****************/


/************ begin Rule BundlePromiseType ****************
 *
 * / *Methode:
 * name=STRING (';'|zuweisung+=Zuweisung (','zuweisung+=Zuweisung)*';');
 * 
 * Zuweisung:
 * name=ID ('=>' (ID|STRING)* )?;* /BundlePromiseType:
 * 	name=ID;
 *
 **/

// name=ID
protected class BundlePromiseType_NameAssignment extends AssignmentToken  {
	
	public BundlePromiseType_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBundlePromiseTypeAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBundlePromiseTypeRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBundlePromiseTypeAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBundlePromiseTypeAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule BundlePromiseType ****************/


/************ begin Rule BodyPromiseType ****************
 *
 * / *BundlePromiseType:
 * 	name=('access' | 'classes' | 'commands' | 'databases' | 'environments' | 'files' | 'inferences' | 'interfaces' |
 * 	'measurements' | 'methods' | 'occurrences' | 'outputs' | 'packages' | 'processes' | 'reports' | 'roles' | 'services' |
 * 	'storage' | 'topics' | 'vars');* /BodyPromiseType:
 * 	name=ID;
 *
 **/

// name=ID
protected class BodyPromiseType_NameAssignment extends AssignmentToken  {
	
	public BodyPromiseType_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyPromiseTypeAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyPromiseTypeRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBodyPromiseTypeAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBodyPromiseTypeAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule BodyPromiseType ****************/


/************ begin Rule BundleComponent ****************
 *
 * / *BodyPromiseType:
 * 	name=('aces' | 'acl_directory_inherit' | 'acl_method' | 'acl_type' | 'action_policy' | 'allow_blank_fields' |
 * 	'associates' | 'atime' | 'audit' | 'background' | 'backward_relationship' | 'before_after' | 'bsdflags' |
 * 	'cancel_kept' | 'cancel_notkept' | 'cancel_repaired' | 'chdir' | 'check_foreign' | 'check_root' | 'chroot' |
 * 	'collapse_destination_dir' | 'command' | 'compare' | 'copy_backup' | 'copy_patterns' | 'copy_size' |
 * 	'copylink_patterns' | 'ctime' | 'db_server_connection_db' | 'db_server_host' | 'db_server_owner' |
 * 	'db_server_password' | 'db_server_type' | 'delete_if_contains_from_list' | 'delete_if_match_from_list' |
 * 	'delete_if_not_contains_from_list' | 'delete_if_not_match_from_list' | 'delete_if_not_startwith_from_list' |
 * 	'delete_if_startwith_from_list' | 'depth' | 'dirlinks' | 'disable' | 'disable_mode' | 'disable_suffix' | 'edit_backup'
 * 	| 'edit_fstab' | 'empty_file_before_editing' | 'encrypt' | 'env_addresses' | 'env_baseline' | 'env_cpus' | 'env_disk'
 * 	| 'env_memory' | 'env_name' | 'env_network' | 'env_spec_file' | 'exclude_dirs' | 'exec_group' | 'exec_owner' |
 * 	'exec_program' | 'exec_regex' | 'exec_timeout' | 'expireafter' | 'extend_fields' | 'extraction_regex' |
 * 	'field_operation' | 'field_separator' | 'field_value' | 'file_result' | 'file_to_print' | 'file_types' | 'findertype'
 * 	| 'first_last' | 'force_ipv4' | 'force_update' | 'forward_relationship' | 'freespace' | 'groups' | 'hash' |
 * 	'ifelapsed' | 'in_range_define' | 'include_basedir' | 'include_dirs' | 'include_end_delimiter' |
 * 	'include_start_delimiter' | 'inference' | 'insert_if_contains_from_list' | 'insert_if_match_from_list' |
 * 	'insert_if_not_contains_from_list' | 'insert_if_not_match_from_list' | 'insert_if_not_startwith_from_list' |
 * 	'insert_if_startwith_from_list' | 'ipv4_address' | 'ipv4_netmask' | 'ipv6_address' | 'issymlinkto' | 'leaf_name' |
 * 	'link_children' | 'link_type' | 'linkcopy_patterns' | 'log_failed' | 'log_kept' | 'log_level' | 'log_priority' |
 * 	'log_repaired' | 'log_string' | 'match_range' | 'max_file_size' | 'measurement_class' | 'mode' | 'mount_options' |
 * 	'mount_server' | 'mount_source' | 'mount_type' | 'mtime' | 'newname' | 'no_output' | 'number_of_lines' | 'occurrences'
 * 	| 'out_of_range_define' | 'owners' | 'package_add_command' | 'package_arch_regex' | 'package_changes' |
 * 	'package_delete_command' | 'package_delete_convention' | 'package_file_repositories' | 'package_installed_regex' |
 * 	'package_list_arch_regex' | 'package_list_command' | 'package_list_name_regex' | 'package_list_update_command' |
 * 	'package_list_update_ifelapsed' | 'package_list_version_regex' | 'package_multiline_start' | 'package_name_convention'
 * 	| 'package_name_regex' | 'package_noverify_regex' | 'package_noverify_returncode' | 'package_patch_arch_regex' |
 * 	'package_patch_command' | 'package_patch_installed_regex' | 'package_patch_list_command' | 'package_patch_name_regex'
 * 	| 'package_patch_version_regex' | 'package_update_command' | 'package_verify_command' | 'package_version_regex' |
 * 	'path_name' | 'persist_time' | 'pgid' | 'pid' | 'portnumber' | 'post_assoc_pattern' | 'ppid' | 'pre_assoc_pattern' |
 * 	'preserve' | 'preview' | 'priority' | 'process_owner' | 'process_result' | 'promise_kept' | 'promise_repaired' |
 * 	'purge' | 'recognize_join' | 'repair_denied' | 'repair_failed' | 'repair_timeout' | 'replace_value' | 'report_changes'
 * 	| 'report_diffs' | 'report_level' | 'rmdeadlinks' | 'rmdirs' | 'rotate' | 'rsize' | 'rxdirs' | 'scan_arrivals' |
 * 	'search_bsdflags' | 'search_groups' | 'search_mode' | 'search_owners' | 'search_size' | 'select_end' | 'select_field'
 * 	| 'select_line_matching' | 'select_line_number' | 'select_start' | 'sensible_count' |
 * 	'sensible_size' | 'servers' | 'service_args' | 'service_autostart_policy' | 'service_dependence_chain' |
 * 	'service_type' | 'source' | 'specify_inherit_aces' | 'status' | 'stealth' | 'stime_range' | 'threads' | 'timeout' |
 * 	'timer_policy' | 'track_growing_file' | 'traverse_links' | 'trustkey' | 'ttime_range' | 'tty' | 'type_check' | 'umask'
 * 	| 'unmount' | 'update_hashes' | 'useshell' | 'value_kept' | 'value_notkept' | 'value_repaired' | 'value_separator' |
 * 	'verify' | 'vsize' | 'when_linking_children' | 'when_no_source' | 'xdev');* ///TODO
 * BundleComponent:
 * 	name= / *('common' | 'agent' | 'server' | 'monitor' | 'runagent' | 'executor' | 'knowledge' | 'reporter' | 'edit_line' |
 * 	'edit_xml' | 'usebundle')* /ID;
 *
 **/

// name= / *('common' | 'agent' | 'server' | 'monitor' | 'runagent' | 'executor' | 'knowledge' | 'reporter' | 'edit_line' |
// 	'edit_xml' | 'usebundle')* /ID
protected class BundleComponent_NameAssignment extends AssignmentToken  {
	
	public BundleComponent_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBundleComponentAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBundleComponentRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBundleComponentAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBundleComponentAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule BundleComponent ****************/


/************ begin Rule BodyComponent ****************
 *
 * //common
 * / *
 * CompoundBody:
 * 	name=('action' | 'classes' | 'contain' | 'database_server' | 'environment_interface' | 'environment_resources' | 'acl' |
 * 	'changes' | 'copy_from' | 'delete' | 'depth_search' | 'edit_defaults' | 'file_select' | 'link_from' | 'perms' |
 * 	'rename' | 'select_region' | 'delete_select' | 'insert_select' | 'location' | 'edit_field' | 'replace_with' | 'tcp_ip'
 * 	| 'package_method' | 'process_count' | 'process_select' | 'service_method' | 'mount' | 'volume' | 'association' |
 * 	'infer' | 'match_value');* /BodyComponent:
 * 	name= / *('printfile' | 'action' | 'transaction' | 'classes' | 'contain' | 'database_server' | 'environment_interface' |
 * 	'environment_resources' | 'acl' | 'changes' | 'copy_from' | 'delete' | 'depth_search' | 'edit_defaults' |
 * 	'file_select' | 'link_from' | 'perms' | 'rename' | 'select_region' | 'delete_select' | 'insert_select' | 'location' |
 * 	'match_value' | 'edit_field' | 'replace_with' | 'tcp_ip' | 'package_method' | 'process_count' | 'process_select' |
 * 	'service_method' | 'mount' | 'volume' | 'association' | 'infer' | 'common')* /ID;
 *
 **/

// name= / *('printfile' | 'action' | 'transaction' | 'classes' | 'contain' | 'database_server' | 'environment_interface' |
// 	'environment_resources' | 'acl' | 'changes' | 'copy_from' | 'delete' | 'depth_search' | 'edit_defaults' |
// 	'file_select' | 'link_from' | 'perms' | 'rename' | 'select_region' | 'delete_select' | 'insert_select' | 'location' |
// 	'match_value' | 'edit_field' | 'replace_with' | 'tcp_ip' | 'package_method' | 'process_count' | 'process_select' |
// 	'service_method' | 'mount' | 'volume' | 'association' | 'infer' | 'common')* /ID
protected class BodyComponent_NameAssignment extends AssignmentToken  {
	
	public BodyComponent_NameAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getBodyComponentAccess().getNameAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getBodyComponentRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getBodyComponentAccess().getNameIDTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getBodyComponentAccess().getNameIDTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule BodyComponent ****************/

}
